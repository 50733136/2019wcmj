<h1>Share X</h1>
<p>螢幕截圖:"Ctrl+Print Screen"</p>
<p>影片錄製開始/結束:"Shift+Print Screen"</p>
<p><img alt="" height="276" src="/images/ShareX_xtN2mAhEux.png" width="500"/></p>
<!-- 導入 Brython 標準程式庫 -->
<script src="/get_page/static/brython.js"></script>
<script src="/get_page/static/brython_stdlib.js"></script>
<p></p>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
</script>
<p><canvas height="400" id="plotarea" width="600"></canvas></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math
 
# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(255, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
</script>
<h1>校園軟體下載</h1><h2>虎科vpn設定</h2>
<p><span>依作業系統版本下載使用者端程式</span></p>
<p><span><img alt="" height="121" src="/images/64.png" width="286"/></span></p>
<p><span>程式下載完成後，點擊兩下開始安裝</span></p>
<p><span><img caption="false" height="286" src="/images/chrome_0fxclLcWK6.png" width="450"/></span></p>
<p><span>"點選搜尋" &gt; 輸入程式名稱為Network Connect&gt; 點擊Network Connect</span></p>
<p><span><img caption="false" height="450" src="/images/chrome_JS4NrhnCv6.png" width="243"/></span></p>
<p><span>執行程式後，於"登入頁面"輸入網址 : <a href="https://sslvpn.nfu.edu.tw/nfu">https://sslvpn9.twaren.net/nfu</a><span><span> </span>，後按下"執行"</span></span></p>
<p><span><span><img caption="false" height="319" src="/images/dsNetworkConnect_sVA0qGwmYT.png" width="350"/></span></span></p>
<p><span><span>輸入使用者帳號密碼</span></span></p>
<p><span><span><img caption="false" height="319" src="/images/dsNetworkConnect_GFJtBqkB9P.png" width="350"/></span></span></p>
<p><span><span>螢幕右下角顯示"已連接"，表示已成功連線</span></span></p>
<p><span><span><img alt="" height="120" src="/images/hNchj6AO35.png" width="120"/></span></span></p>
<p><span><span>在IE瀏覽器上按下右鍵 使用"以系統管理員身分執行"</span></span></p>
<p><span><span>登入頁面： <a href="https://sslvpn9.twaren.net/nfu">https://sslvpn9.twaren.net/nfu</a><span>，按下「執行」，會出現帳號與密碼登入欄位</span></span></span></p>
<p><span><span><img alt="" height="212" src="/images/chrome_jCQlJNbNYZ.png" width="250"/></span></span></p>
<p><span><span><img alt="" height="432" src="/images/chrome_JR3aHY4RuB.png" width="800"/></span></span></p>
<p><span><span>點選"開始"</span></span></p>
<p><span><span><img caption="false" height="276" src="/images/...7.png" width="450"/></span></span></p>
<div><span>點選"是"，SSL VPN程式安裝完畢後，就會開始跟電腦建立連線</span></div>
<div><span><img alt="" height="283" src="/images/....png" width="450"/></span></div>
<div><b>VPN連線建立完成</b></div>
<div><b><img alt="" height="266" src="/images/...9.png" width="450"/></b></div>
<div></div>
<p><span><span></span></span></p><h1>期末報告</h1>
<p>50733136 廖小萱</p><h1>虛擬主機</h1>
<p><span>利用 Virtualbox 建立虛擬 Ubuntu 18.04 網際內容管理系統伺服主機:</span><br/><span><br/></span><span>1. 安裝最新版的 Virtualbox</span><br/><span>2. 建立 Ubuntu 18.04 虛擬主機</span><br/><span>3. 以網路卡橋接啟動 Ubuntu 伺服器</span><br/><span>4. 以 sudo apt install nginx 安裝 nginx WWW 伺服器</span><br/><span>5. 以 ifconfig 查 Ubuntu 伺服器的 IP, 測試 nginx 伺服器是否可以連線</span><br/><span>6. 以 Windows 10  下的 Filezilla client, 將編輯好的 nginx 設定檔案送到 Ubuntu</span><br/><span>7. 利用 Ubuntu 指令將設定檔案搬至設定位置後, 以 /etc/init.d/nginx restart 重新啟動 nginx</span><br/><span>8. 在 Ubuntu 中以 sudo apt install uwsgi 安裝 uwsgi</span><br/><span>9. 在 Windows 10 編輯 uwsgi 與 nginx 所需的設定檔案, 完成後以 filezilla 送至 Ubuntu.</span><br/><span>10. 將 CMSimfly 程式碼送到 Ubuntu 伺服器中對應目錄後.</span><br/><span>11. 在 Ubuntu 建立 cmsimfly 服務, 並設定隨機啟動.</span><br/><span>12. 完成後, 在 Windows 10 以瀏覽器連線至 CMSimfly, 確認動態網頁與靜態網頁可以在虛擬主機中正常啟動.</span></p>
<p><img alt="" height="185" src="/images/chrome_PMBP3eBwev.png" width="450"/></p>
<p><img alt="" height="156" src="/images/chrome_doSTeKtXhs.png" width="450"/></p>
<p></p>
<p><img alt="" height="105" src="/images/explorer_iQ72bT76Ai.png" width="96"/></p>
<p><img caption="false" height="342" src="/images/VirtualBox_e7ZZGFBa8d.png" width="300"/></p>
<p></p>
<p></p>
<p><img alt="" height="342" src="/images/VirtualBox_l6URLqkKvx.png" width="300"/></p>
<p></p>
<p><img alt="" height="342" src="/images/VirtualBox_tfMEFfU3RH.png" width="300"/></p>
<p></p>
<p><img caption="false" height="306" src="/images/VirtualBox_hH1iI3atUQ.png" width="300"/></p>
<p></p>
<p><img alt="" height="306" src="/images/VirtualBox_rpqRfm3FP5.png" width="300"/></p>
<p></p>
<p><img alt="" height="306" src="/images/VirtualBox_uPcsPevU3F.png" width="300"/></p>
<p><img alt="" height="336" src="/images/VirtualBox_RdhxrxdH8X.png" width="500"/></p>
<p><img alt="" height="430" src="/images/VirtualBox_kWp5Uyhp3o.png" width="500"/></p>
<p><img alt="" height="430" src="/images/VirtualBox_Ja2RudeP19.png" width="500"/></p>
<p><img alt="" height="398" src="/images/filezilla_QyeikkR7n1.png" width="500"/></p>
<p></p>
<p></p><h1>近端配置與管理</h1>
<p>伺服器(<b>Server)</b>：管理資源並為用戶提供服務的電腦軟體，通常分為檔案伺服器（能使用戶在其它電腦存取檔案），資料庫伺服器和應用程式伺服器。 執行以上軟體的電腦，或稱為網路主機（Host）。</p>
<p><span>192.168.  *---各電腦以DHCP客戶端取得192.168.  *的網路位址，為內部網路，好處是外邊連不進來，可避免資料外洩。</span></p>
<p><span>140.130.  *---為外部網路</span></p>
<p>當chrome proxy不順 : (1)須了解網路設定，可利用可攜查詢可用網路(2)或從windows10的設定中了解，並前往chrome右上方的設定中更改代理主機</p>
<p><span>(1)#指令Y:\&gt;ipconfig  /all---了解網路設定、狀況</span></p>
<p><span><img alt="" height="222" src="/images/chrome指令02.png" width="450"/></span></p>
<p><span>指令Y:\&gt;nslookup (name server look up)---查詢預設伺服器</span></p>
<p><span>指令Y:\&gt;proxy.kmol.info---查詢代理主機</span></p>
<p><span><img alt="" height="489" src="/images/chrome指令03.png" width="400"/></span></p>
<p><span>(2)<span>從windows10的設定</span></span></p>
<p><span><span><img alt="" height="144" src="/images/下載.png" width="450"/></span></span></p>
<p><span><img alt="" height="149" src="/images/win.png" width="250"/><img caption="false" height="365" src="/images/windows nat03.png" width="300"/></span></p>
<p><img caption="false" height="152" src="/images/chrome_8eC5dIPwCn.png" width="400"/></p>
<p><img alt="" height="232" src="/images/windows nat04.jpg" width="350"/></p>
<p><img alt="" height="239" src="/images/windows nat05.jpg" width="400"/></p>
<p><span>chrome右上方的設定中更改代理主機</span></p>
<p><span><img alt="" height="37" src="/images/chrome_5DKjhAsTya.png" width="450"/></span></p>
<p><span><img alt="" height="487" src="/images/rundll32_8kCh1DQBhk.png" width="400"/></span></p>
<p><span><img alt="" height="129" src="/images/rundll32_sM4agS0b6S.png" width="400"/></span></p>
<p><span><img alt="" height="146" src="/images/rundll32_0WZb9lH3Kf.png" width="400"/></span></p>
<p>mde.tw</p>
<p><img alt="" height="230" src="/images/chrome_SsMMMYPtGw.png" width="450"/></p>
<p>github.com</p>
<p><img alt="" height="295" src="/images/chrome_U7WqeT8iIn.png" width="249"/></p>
<p><img alt="" height="332" src="/images/chrome_YeCSkoAPOi.png" width="450"/></p>
<p>portable programming system</p>
<p>protablegit - remove helper=manager</p>
<p>login github add repository - README.md</p>
<p>git clone self-repo and CMSimfly</p>
<p>y:\home\.gitconfig</p>
<p>git config --global user.name"50733136"</p>
<p>git config --global user.eamil"50733136@gm.nfu.edu.tw"</p>
<p>git config --global http.proxy <a href="http://140.130.17.3:3128">http://140.130.17.3:3128</a></p>
<p>git add .</p>
<p>git push</p>
<p>Github Pages -setting url</p>
<p>local python</p>
<p></p>
<p></p><h1>期中報告</h1>
<p></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/S09FjTkL244" width="560"></iframe></p>
<p><a href="https://www.youtube.com/watch?v=S09FjTkL244&amp;t=8s">https://www.youtube.com/watch?v=S09FjTkL244&amp;t=8s</a></p>
<h1>game</h1>
<p></p>
<p><img alt="" height="263" src="/images/bts.jpg" width="500"/></p>
<h2>game1</h2>
<script type="text/javascript">
var cwidth = 400;
    var cheight = 300;
    var dicex = 50;
    var dicey = 50;
    var dicewidth = 100;
    var diceheight = 100;
    var dotrad = 6;
    var ctx;
    var dx;
    var dy;
    var firstturn = true;
    var point;
function throwdice() {
    var sum;
    var ch = 1+Math.floor(Math.random()*6);
    sum = ch;
    dx = dicex;
    dy = dicey;
    drawface(ch);
    dx = dicex + 150;
    ch=1 + Math.floor(Math.random()*6);
    sum += ch;
    drawface(ch);
    if (firstturn) {
        switch(sum) {
            case 7:
            case 11:
              document.f.outcome.value="You win!";
              break;
            case 2:
            case 3:
            case 12:
              document.f.outcome.value="You lose!";
              break;
            default:
              point = sum;
              document.f.pv.value=point;
              firstturn = false;
              document.f.stage.value="Need follow-up throw.";
              document.f.outcome.value="   ";
        }
    }
    else {
        switch(sum) {
        case point:
           document.f.outcome.value="You win!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
           break;
        case 7:
           document.f.outcome.value="You lose!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
        }
            }
}
function drawface(n) {
  ctx = document.getElementById('canvas').getContext('2d');  
  ctx.lineWidth = 5;
  ctx.clearRect(dx,dy,dicewidth,diceheight);
  ctx.strokeRect(dx,dy,dicewidth,diceheight)
  var dotx;
  var doty;
  ctx.fillStyle = "#009966";
    switch(n) {
        case 1:
         draw1();
         break;
        case 2:
         draw2();
         break;
        case 3:
         draw2();
         draw1();
         break;
        case 4:
         draw4();
         break;
        case 5:
         draw4();
         draw1();
         break;
        case 6:
         draw4();
         draw2mid();
         break;
         
    }
}
function draw1() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + .5*dicewidth;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw2() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw4() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + diceheight-3*dotrad;  //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+ 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill(); 
}
function draw2mid() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy + .5*diceheight; //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
</script>
<p><canvas height="300" id="canvas" width="400"> Your browser doesn't support the HTML5 element canvas. </canvas> <br/> <button onclick="throwdice();">Throw dice </button></p>
<form id="f" name="f">
<p>Stage: <input name="stage" type="text" value="First Throw"/> Point: <input name="pv" type="text" value="   "/> Outcome: <input name="outcome" type="text" value="     "/></p>
<p></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;script type="text/javascript"&gt;// &lt;![CDATA[
var cwidth = 400;
    var cheight = 300;
    var dicex = 50;
    var dicey = 50;
    var dicewidth = 100;
    var diceheight = 100;
    var dotrad = 6;
    var ctx;
    var dx;
    var dy;
    var firstturn = true;
    var point;
function throwdice() {
    var sum;
    var ch = 1+Math.floor(Math.random()*6);
    sum = ch;
    dx = dicex;
    dy = dicey;
    drawface(ch);
    dx = dicex + 150;
    ch=1 + Math.floor(Math.random()*6);
    sum += ch;
    drawface(ch);
    if (firstturn) {
        switch(sum) {
            case 7:
            case 11:
              document.f.outcome.value="You win!";
              break;
            case 2:
            case 3:
            case 12:
              document.f.outcome.value="You lose!";
              break;
            default:
              point = sum;
              document.f.pv.value=point;
              firstturn = false;
              document.f.stage.value="Need follow-up throw.";
              document.f.outcome.value="   ";
        }
    }
    else {
        switch(sum) {
        case point:
           document.f.outcome.value="You win!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
           break;
        case 7:
           document.f.outcome.value="You lose!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
        }
            }
}
function drawface(n) {
  ctx = document.getElementById('canvas').getContext('2d');  
  ctx.lineWidth = 5;
  ctx.clearRect(dx,dy,dicewidth,diceheight);
  ctx.strokeRect(dx,dy,dicewidth,diceheight)
  var dotx;
  var doty;
  ctx.fillStyle = "#009966";
    switch(n) {
        case 1:
         draw1();
         break;
        case 2:
         draw2();
         break;
        case 3:
         draw2();
         draw1();
         break;
        case 4:
         draw4();
         break;
        case 5:
         draw4();
         draw1();
         break;
        case 6:
         draw4();
         draw2mid();
         break;
         
    }
}
function draw1() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + .5*dicewidth;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw2() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw4() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + diceheight-3*dotrad;  //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+ 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill(); 
}
function draw2mid() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy + .5*diceheight; //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
// ]]&gt;&lt;/script&gt;
&lt;p&gt;&lt;canvas height="300" id="canvas" width="400"&gt; Your browser doesn't support the HTML5 element canvas. &lt;/canvas&gt; &lt;br&gt; &lt;button onclick="throwdice();"&gt;Throw dice &lt;/button&gt;&lt;/p&gt;
&lt;form id="f" name="f"&gt;Stage: &lt;input name="stage" type="text" value="First Throw"&gt; Point: &lt;input name="pv" type="text" value="   "&gt; Outcome: &lt;input name="outcome" type="text" value="     "&gt;&lt;/form&gt;</pre>
<p><br/><br/></p>
</form>
<h2>game2</h2>
<p><button onclick="myFunction()">Try it</button></p>
<p id="demo"></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;p&gt;&lt;button onclick="myFunction()"&gt;Try it&lt;/button&gt;&lt;/p&gt;
&lt;p id="demo"&gt;&lt;/p&gt;
&lt;script&gt;// &lt;![CDATA[
function myFunction() {
  document.getElementById("demo").innerHTML = Math.floor(Math.random()*10);
}
// ]]&gt;&lt;/script&gt;</pre>
<p><br/><br/></p>
<script>
function myFunction() {
  document.getElementById("demo").innerHTML = Math.floor(Math.random()*10);
}
</script>
<h1>ROC Flag</h1>
<p></p>
<!-- 導入 Brython 標準程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<p></p>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
</script>
<p><canvas height="400" id="plotarea" width="600"></canvas></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(255, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath(100)
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
</script>
<p><canvas height="400" id="plotarea2" width="600"></canvas></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea2"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(169, 169, 169)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(128, 128, 128)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath(0)
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(105, 105, 105)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
</script>